openapi: "3.0.3"
info:
  title: "Application API"
  description: "Application API"
  version: "1.0.0"
servers:
  - url: "http://0.0.0.0:8080"
paths:
  /api/v1/users:
    get:
      summary: список пользователей
      tags:
        - users
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        401:
          description: Unauthorized
        403:
          description: Forbidden
    post:
      summary: добавить пользователя
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /api/v1/users/{id}:
    get:
      summary: получить пользователя по id
      tags:
        - users
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id пользователя
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    delete:
      summary: удалить пользователя по id
      tags:
        - users
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id пользователя
      responses:
        204:
          description: No Content
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /api/v1/posts:
    get:
      summary: список постов
      tags:
        - posts
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Post'
        401:
          description: Unauthorized
        403:
          description: Forbidden
    post:
      summary: добавить пост
      tags:
        - posts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostCreate'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /api/v1/posts/{id}:
    get:
      summary: получить пост по id
      tags:
        - posts
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id поста
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        401:
          description: Unauthorized
        403:
          description: Forbidden
        404:
          description: Not Found
    patch:
      summary: обновить пост
      tags:
        - posts
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id поста
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        401:
          description: Unauthorized
        403:
          description: Forbidden
  /api/v1/comments/{id}:
    get:
      summary: список комментариев
      tags:
        - comments
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id поста
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        401:
          description: Unauthorized
        403:
          description: Forbidden
    post:
      summary: добавить комментарий
      tags:
        - comments
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: id поста
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentCreate'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        401:
          description: Unauthorized
        403:
          description: Forbidden

components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        surname:
          type: string
        group:
          type: string
        login:
          type: string
    UserCreate:
      type: object
      properties:
        name:
          type: string
        surname:
          type: string
        group:
          type: string
        login:
          type: string
        password:
          type: string
    Post:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        text:
          type: string
        user:
          $ref: '#/components/schemas/User'
    PostCreate:
      type: object
      properties:
        title:
          type: string
        text:
          type: string
        user:
          $ref: '#/components/schemas/User'
    Comment:
      type: object
      properties:
        id:
          type: integer
        text:
          type: string
        post:
          type: integer
        user:
          $ref: '#/components/schemas/User'
    CommentCreate:
      type: object
      properties:
        text:
          type: string
        post:
          type: integer
        user:
          $ref: '#/components/schemas/User'