user root;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;

    log_format upstreamlog '[$time_local] $remote_addr - $server_name $host to: $upstream_addr: $request $status upstream_response_time $upstream_response_time msec $msec request_time $request_time';

    upstream backend {
        server app:8080 weight=2;
        server app2:8080 weight=1;
        server app3:8080 weight=1;
    }

    # map $request_method $upstream_location {
    #     GET     backend;
    #     default app:8080;
    # }

    upstream mirror {
        server mirror:8080;
    }

    upstream pgadmin {
        server pgadmin;
    }

    server {
        listen 80;
        resolver    127.0.0.1;

        server_tokens off;
        more_set_headers 'Server: ics-network.ru';

        gzip            on;
        gzip_comp_level 5;

        access_log /var/log/nginx/access.log upstreamlog;
    
        location /api/v1 {
            gzip off;

            proxy_pass http://backend;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
        }

        location = /api/v1 {
            return 301 /api/v1/swagger-ui/index.html;
        }
        
        location /admin {
            gzip off;

            proxy_set_header X-Script-Name /admin;
            proxy_pass http://pgadmin;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
        }

        location = /documentation {
            rewrite /documentation /Readme.md break;
            root /var/www/static;
            charset UTF-8;
            expires 30d;
        }

        location /mirror {
            gzip off;

            rewrite /mirror/(.*) /$1 break;
            proxy_pass http://mirror;
            proxy_redirect     off;
        }

        location / {
            root /var/www/static;
            expires 30d;
        }

        location /test {
            rewrite /test /;
        }

        location /status {
            stub_status;
        }
    }
}
